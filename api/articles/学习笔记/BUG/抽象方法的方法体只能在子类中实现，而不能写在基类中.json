{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"学习笔记/BUG/抽象方法的方法体只能在子类中实现，而不能写在基类中","date":"2023-06-22T17:44:40.245Z","updated":"2023-06-20T07:18:24.385Z","comments":true,"path":"api/articles/学习笔记/BUG/抽象方法的方法体只能在子类中实现，而不能写在基类中.json","keywords":null,"cover":null,"content":"<p><mark>抽象方法只能在抽象类中定义</mark><br>\n这个错误提示是因为您在抽象类 <code>Polygon</code>  中声明了一个抽象方法 <code>Purarea</code> ，但是没有为它提供方法体。在 C# 中，抽象方法必须以分号结尾，并且不能有方法体，因为它们没有实现，必须在子类中实现。</p>\n<p>要解决这个问题，您需要为 <code>Purarea</code>  方法提供方法体，或者将 <code>Polygon</code>  类声明为抽象类，以便子类可以实现 <code>Purarea</code>  方法。</p>\n<p>以下是一个示例，演示了如何在 <code>Polygon</code>  类中声明抽象方法：</p>\n<pre class=\"line-numbers language-CS\" data-language=\"CS\"><code class=\"language-CS\">\nabstract class Polygon\n\n&#123;\n\n    public abstract void Purarea();\n\n&#125;\n\nclass Rectangle : Polygon\n\n&#123;\n\n    public override void Purarea()\n\n    &#123;\n\n        Console.WriteLine(&quot;Calculate the area of a rectangle.&quot;);\n\n    &#125;\n\n&#125;\n\n&#x2F;&#x2F; 使用示例\n\nPolygon polygon &#x3D; new Rectangle();\n\npolygon.Purarea(); &#x2F;&#x2F; 输出：Calculate the area of a rectangle.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在这个示例中，我们定义了一个抽象类 <code>Polygon</code>  和一个非抽象子类 <code>Rectangle</code> ，它们都实现了 <code>Purarea</code>  方法。在使用示例中，我们创建了一个 <code>Rectangle</code>  对象，并将其赋值给 <code>Polygon</code>  类型的变量 <code>polygon</code> 。然后，我们调用 <code>polygon.Purarea()</code>  方法，它会调用 <code>Rectangle</code>  类中的 <code>Purarea</code>  方法，并输出 <code>Calculate the area of a rectangle.</code> 。</p>\n","text":"抽象方法只能在抽象类中定义 这个错误提示是因为您在抽象类 Polygon 中声明了一个抽象方法 Purarea ，但是没有为它提供方法体。在 C# 中，抽象方法必须以分号结尾，并且不能有方法体，因为它们没有实现，必须在子类中实现。 要解决这个问题，您需要为 Purarea 方法提...","link":"","photos":[],"count_time":{"symbolsCount":840,"symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"学习笔记/BUG/直接通过vscode运行CS文件报错","date":"2023-06-22T17:44:40.245Z","updated":"2023-06-22T17:42:57.279Z","comments":true,"path":"api/articles/学习笔记/BUG/直接通过vscode运行CS文件报错.json","keywords":null,"cover":[],"text":" # 这个 C# 脚本文件在 Unity 所开的项目中可以正常运行，但为什么直接在 vscode 运行不行呢。 # 1. 首先是报错的原因 这个错误提示意味着 PowerShell 无法找到名为 scriptcs 的命令。这通常是因为 scriptcs 没有被正确安装或者没有被添...","link":"","photos":[],"count_time":{"symbolsCount":651,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"c#/条件语句（线性）","uid":"54d447f8623da657ba449b31985df4c4","slug":"学习笔记/Csharp/条件语句（线性）","date":"2023-06-22T16:39:59.000Z","updated":"2023-06-22T18:05:22.098Z","comments":true,"path":"api/articles/学习笔记/Csharp/条件语句（线性）.json","keywords":null,"cover":null,"text":" void Func1() &#123; int value1&#x3D;15; if(value1&gt;5) &#123; Debug.Log(&quot;value1 is greater than 5&quot;);&#x2F;&#x2F;value1满足了第一个条件就执...","link":"","photos":[],"count_time":{"symbolsCount":537,"symbolsTime":"1 mins."},"categories":[{"name":"C#","slug":"C","count":10,"path":"api/categories/C.json"}],"tags":[{"name":"语言学习","slug":"语言学习","count":11,"path":"api/tags/语言学习.json"},{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"},{"name":"C#","slug":"C","count":10,"path":"api/tags/C.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}