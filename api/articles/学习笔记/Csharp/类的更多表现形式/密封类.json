{"title":"c#/抽象类","uid":"02a13521d1a9067da4901a7085158d6a","slug":"学习笔记/Csharp/类的更多表现形式/密封类","date":"2023-06-22T16:39:59.000Z","updated":"2023-06-23T04:11:34.772Z","comments":true,"path":"api/articles/学习笔记/Csharp/类的更多表现形式/密封类.json","keywords":null,"cover":[],"content":"<p>/*  抽象类</p>\n<p>1. 抽象类不可以被实例化</p>\n<p>2. 抽象函数只能写在抽象类之中，并且抽象函数不能有方法体</p>\n<p>3. 抽象类的子类必须实现抽象类中的所有抽象函数</p>\n<p>4. 抽象类中可以有非抽象函数</p>\n<p>5. 抽象类可以继承抽象类，但是子类必须实现所有抽象函数</p>\n<p>6. 非抽象类可以继承抽象类，但是子类必须实现所有抽象函数</p>\n<p>*/</p>\n<h2 id=\"密封类\"><a class=\"markdownIt-Anchor\" href=\"#密封类\">#</a> 密封类</h2>\n<p>1. 密封类不可以被继承（他只能是子类）</p>\n<p>2. 密封类不能是抽象的。sealed 和 abstract 是互斥的</p>\n<p>（其实很好理解，密封类不能作为基类，只能是子类</p>\n<p>而抽象类虽然可以既是基类又是子类，但是其中的抽</p>\n<p>象函数是不能在抽象类中写方法体的，必须要在子类</p>\n<p>中实现，这就和密封类的定义【不可被继承，不能有子类】相违背了）</p>\n<p><img src=\"https://cenyi-picture-1317709115.cos.ap-shanghai.myqcloud.com/picture/202306230142194.png\" alt=\"Pasted image 20230621161128.png\"></p>\n<h3 id=\"上述报错表明了抽象类和封闭类是互斥的\"><a class=\"markdownIt-Anchor\" href=\"#上述报错表明了抽象类和封闭类是互斥的\">#</a> 上述报错，表明了抽象类和封闭类是互斥的</h3>\n","text":"/* 抽象类 1. 抽象类不可以被实例化 2. 抽象函数只能写在抽象类之中，并且抽象函数不能有方法体 3. 抽象类的子类必须实现抽象类中的所有抽象函数 4. 抽象类中可以有非抽象函数 5. 抽象类可以继承抽象类，但是子类必须实现所有抽象函数 6. 非抽象类可以继承抽象类，但是子类...","link":"","photos":[],"count_time":{"symbolsCount":345,"symbolsTime":"1 mins."},"categories":[{"name":"C#","slug":"C","count":10,"path":"api/categories/C.json"}],"tags":[{"name":"语言学习","slug":"语言学习","count":11,"path":"api/tags/语言学习.json"},{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"},{"name":"C#","slug":"C","count":10,"path":"api/tags/C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AF%86%E5%B0%81%E7%B1%BB\"><span class=\"toc-text\"> 密封类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E8%BF%B0%E6%8A%A5%E9%94%99%E8%A1%A8%E6%98%8E%E4%BA%86%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E5%B0%81%E9%97%AD%E7%B1%BB%E6%98%AF%E4%BA%92%E6%96%A5%E7%9A%84\"><span class=\"toc-text\"> 上述报错，表明了抽象类和封闭类是互斥的</span></a></li></ol></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"c#/抽象方法（abstruct）和虚方法(virtual)的区别","uid":"da7125ed58b8c094cc6f04018e8ade4f","slug":"学习笔记/Csharp/Class类/抽象方法（abstruct）和虚方法(virtual)的区别","date":"2023-06-22T16:39:59.000Z","updated":"2023-06-23T04:11:37.762Z","comments":true,"path":"api/articles/学习笔记/Csharp/Class类/抽象方法（abstruct）和虚方法(virtual)的区别.json","keywords":null,"cover":null,"text":"实际上虚函数就类似于初省值 # 抽象函数只能定义在抽象类中，并且不能在基类中写入方法体，只能写在子类实现 抽象方法和虚函数都是面向对象编程中的重要概念，它们都可以在基类中声明，然后在派生类中进行实现。它们的主要区别在于： 抽象方法必须在派生类中进行实现，而虚函数可以选择在派生类中...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"C#","slug":"C","count":10,"path":"api/categories/C.json"}],"tags":[{"name":"语言学习","slug":"语言学习","count":11,"path":"api/tags/语言学习.json"},{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"},{"name":"C#","slug":"C","count":10,"path":"api/tags/C.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"“SHUFLY交流会有感“","uid":"6c5c86eb6f1c168ac1792c0c4f39d96d","slug":"SHUFLY交流会有感","date":"2023-04-17T15:39:47.000Z","updated":"2023-04-19T09:17:49.003Z","comments":true,"path":"api/articles/SHUFLY交流会有感.json","keywords":null,"cover":"105449863_p0.jpeg","text":"首先真的十分感谢在交流会上分享经验的学长学姐们，真的收获很多。特别是对于我这种信息面不是很广的大一新生来说，像是打开了新世界的大门。接下来我将通过三个方面来简述一下我的收获和反省 # 1. 个人选择 首先个人选择这一方面，一定是从自身出发，一位数学系的学长说的很好 ==“别人的经...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"life","slug":"life","count":1,"path":"api/categories/life.json"}],"tags":[{"name":"感悟","slug":"感悟","count":1,"path":"api/tags/感悟.json"},{"name":"成长","slug":"成长","count":1,"path":"api/tags/成长.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}