{"title":"c#/抽象函数","uid":"a3127223cee8ed98b2c97d067dde0e0d","slug":"学习笔记/Csharp/类的更多表现形式/抽象类","date":"2023-06-22T16:39:59.000Z","updated":"2023-06-23T04:11:41.839Z","comments":true,"path":"api/articles/学习笔记/Csharp/类的更多表现形式/抽象类.json","keywords":null,"cover":[],"content":"<p><img src=\"https://cenyi-picture-1317709115.cos.ap-shanghai.myqcloud.com/picture/202306230141139.png\" alt=\"Pasted image 20230621154048.png\"><br>\n<img src=\"https://cenyi-picture-1317709115.cos.ap-shanghai.myqcloud.com/picture/202306230141676.png\" alt=\"Pasted image 20230621154506.png\"></p>\n<h2 id=\"抽象类不可被实例化\"><a class=\"markdownIt-Anchor\" href=\"#抽象类不可被实例化\">#</a> 抽象类不可被实例化</h2>\n<p><img src=\"https://cenyi-picture-1317709115.cos.ap-shanghai.myqcloud.com/picture/202306230141139.png\" alt=\"Pasted image 20230621154709.png\"></p>\n<h2 id=\"抽象类之中的抽象函数必须在子类写好实现的方法体\"><a class=\"markdownIt-Anchor\" href=\"#抽象类之中的抽象函数必须在子类写好实现的方法体\">#</a> 抽象类之中的抽象函数必须在<mark>子类写好实现的方法体</mark></h2>\n","text":" # 抽象类不可被实例化 # 抽象类之中的抽象函数必须在子类写好实现的方法体 ","link":"","photos":[],"count_time":{"symbolsCount":41,"symbolsTime":"1 mins."},"categories":[{"name":"C#","slug":"C","count":10,"path":"api/categories/C.json"}],"tags":[{"name":"语言学习","slug":"语言学习","count":13,"path":"api/tags/语言学习.json"},{"name":"笔记","slug":"笔记","count":13,"path":"api/tags/笔记.json"},{"name":"C#","slug":"C","count":12,"path":"api/tags/C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8A%BD%E8%B1%A1%E7%B1%BB%E4%B8%8D%E5%8F%AF%E8%A2%AB%E5%AE%9E%E4%BE%8B%E5%8C%96\"><span class=\"toc-text\"> 抽象类不可被实例化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8A%BD%E8%B1%A1%E7%B1%BB%E4%B9%8B%E4%B8%AD%E7%9A%84%E6%8A%BD%E8%B1%A1%E5%87%BD%E6%95%B0%E5%BF%85%E9%A1%BB%E5%9C%A8%E5%AD%90%E7%B1%BB%E5%86%99%E5%A5%BD%E5%AE%9E%E7%8E%B0%E7%9A%84%E6%96%B9%E6%B3%95%E4%BD%93\"><span class=\"toc-text\"> 抽象类之中的抽象函数必须在子类写好实现的方法体</span></a></li></ol>","author":{"name":"CenYi","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"c#/this 和 base 的区别","uid":"e262221502c6a5b9d791265ede6d33bb","slug":"学习笔记/Csharp/Class类/this 和 base 的区别","date":"2023-06-22T16:39:59.000Z","updated":"2023-06-22T18:06:20.985Z","comments":true,"path":"api/articles/学习笔记/Csharp/Class类/this 和 base 的区别.json","keywords":null,"cover":null,"text":"# this 和 base 都是 C# 中的关键字，它们的主要区别在于： this 关键字用于引用当前对象，可以用来访问当前对象的成员变量、成员方法和构造函数等。 this 关键字可以用于区分局部变量和成员变量、调用其他构造函数、实现链式调用等场景。 base 关键字用于引用基类...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"C#","slug":"C","count":10,"path":"api/categories/C.json"}],"tags":[{"name":"语言学习","slug":"语言学习","count":13,"path":"api/tags/语言学习.json"},{"name":"笔记","slug":"笔记","count":13,"path":"api/tags/笔记.json"},{"name":"C#","slug":"C","count":12,"path":"api/tags/C.json"}],"author":{"name":"CenYi","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"c#/封装","uid":"b760326611e8ddc16545105090a99769","slug":"学习笔记/Csharp/Class类/封装","date":"2023-06-22T16:39:59.000Z","updated":"2023-06-22T18:04:56.847Z","comments":true,"path":"api/articles/学习笔记/Csharp/Class类/封装.json","keywords":null,"cover":null,"text":"# 封装的主要目的 封装的主要目的是将数据和行为组合在一个单元中，并对外部隐藏数据的实现细节，只暴露必要的接口供外部访问。这样可以提高代码的可维护性、可重用性和安全性。 封装可以防止外部代码直接访问和修改对象的内部状态，从而避免了意外的数据修改和错误的数据访问。同时，封装还可以隐...","link":"","photos":[],"count_time":{"symbolsCount":263,"symbolsTime":"1 mins."},"categories":[{"name":"C#","slug":"C","count":10,"path":"api/categories/C.json"}],"tags":[{"name":"语言学习","slug":"语言学习","count":13,"path":"api/tags/语言学习.json"},{"name":"笔记","slug":"笔记","count":13,"path":"api/tags/笔记.json"},{"name":"C#","slug":"C","count":12,"path":"api/tags/C.json"}],"author":{"name":"CenYi","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}