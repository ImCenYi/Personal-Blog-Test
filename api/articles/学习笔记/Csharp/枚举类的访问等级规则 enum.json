{"title":"c#/枚举类的访问等级规则","uid":"d79f42eaa171a5fe6902544e2bd5f323","slug":"学习笔记/Csharp/枚举类的访问等级规则 enum","date":"2023-06-22T16:39:59.000Z","updated":"2023-06-22T18:04:51.726Z","comments":true,"path":"api/articles/学习笔记/Csharp/枚举类的访问等级规则 enum.json","keywords":null,"cover":null,"content":"<pre class=\"line-numbers language-C#\" data-language=\"C#\"><code class=\"language-C#\"> enum emAction\n&#123;\n    GetUp,\n    Wash,\n    Eat,\n    Work,\n&#125;\n\npublic emAction Action;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面这串代码出现了一个错误，即 <code>emAction</code>  枚举类型的访问修饰符与 <code>mAction</code>  字段的访问修饰符不匹配。具体来说， <code>emAction</code>  枚举类型是默认的（即没有访问修饰符），而 <code>Action</code>  字段是公共的（ <code>public</code> ）。</p>\n<h3 id=\"这违反了c的访问性限制\"><a class=\"markdownIt-Anchor\" href=\"#这违反了c的访问性限制\">#</a> 这违反了 C# 的访问性限制</h3>\n<p>因为一个字段的可访问性不能高于其类型的可访问性。因此，您需要将 <code>emAction</code>  枚举类型的访问修饰符更改为公共的（ <code>public</code> ）或将 <code>mAction</code>  字段的访问修饰符更改为默认 (private 级别) 的（即删除 <code>public</code>  关键字）。</p>\n<pre class=\"line-numbers language-C#\" data-language=\"C#\"><code class=\"language-C#\">enum emAction<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>我们可以看到上面那串代码之中，所定义的 emAction 枚举类。前面没有刻意加上访问修饰符，则默认是 <code>private</code>  访问等级，是最低一级。<br>\n<mark>关于访问等级先后详细看 [[访问等级]]</mark><br>\n 如果 <code>Action</code>  字段是 <code>public</code> ，则将 <code>emAction</code>  枚举类型的可访问性设置为 <code>private</code>  是不合适的，因为这会违反 C# 的访问性规则。一个字段的可访问性不能高于其类型的可访问性。</p>\n<h3 id=\"那为什么c要有这个访问性限制呢-其实也不难理解\"><a class=\"markdownIt-Anchor\" href=\"#那为什么c要有这个访问性限制呢-其实也不难理解\">#</a> 那为什么 C# 要有这个访问性限制呢。其实也不难理解</h3>\n<p>C# 中语段的访问等级不能高于枚举类型的访问等级，是因为一个语段（如字段、属性、方法等）的可访问性依赖于其类型的可访问性。如果一个语段的类型的可访问性比它本身的可访问性更低，那么这个语段就不能被访问，因为它的类型不可访问。</p>\n<p>例如，在这个示例中， <code>mAction</code>  字段的访问修饰符是 <code>public</code> ，而 <code>emAction</code>  枚举类型的访问修饰符是默认的（即 <code>private</code> ）。这违反了 C# 的访问性规则，因为一个字段的可访问性不能高于其类型的可访问性。因此，编译器会报错，提示 <code>emAction</code>  枚举类型的可访问性低于 <code>mAction</code>  字段的可访问性。</p>\n<p>说白了，这个语段的访问，必须要访问到这个枚举类型本身，如果这个语段的访问性比枚举类型高，那么对于这个语段的访问就不成立。</p>\n","text":" enum emAction &#123; GetUp, Wash, Eat, Work, &#125; public emAction Action; 上面这串代码出现了一个错误，即 emAction 枚举类型的访问修饰符与 mAction 字段的访问修饰符不匹配。具体来说， ...","link":"","photos":[],"count_time":{"symbolsCount":944,"symbolsTime":"1 mins."},"categories":[{"name":"C#","slug":"C","count":10,"path":"api/categories/C.json"}],"tags":[{"name":"语言学习","slug":"语言学习","count":11,"path":"api/tags/语言学习.json"},{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"},{"name":"C#","slug":"C","count":10,"path":"api/tags/C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%99%E8%BF%9D%E5%8F%8D%E4%BA%86c%E7%9A%84%E8%AE%BF%E9%97%AE%E6%80%A7%E9%99%90%E5%88%B6\"><span class=\"toc-text\"> 这违反了 C# 的访问性限制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%82%A3%E4%B8%BA%E4%BB%80%E4%B9%88c%E8%A6%81%E6%9C%89%E8%BF%99%E4%B8%AA%E8%AE%BF%E9%97%AE%E6%80%A7%E9%99%90%E5%88%B6%E5%91%A2-%E5%85%B6%E5%AE%9E%E4%B9%9F%E4%B8%8D%E9%9A%BE%E7%90%86%E8%A7%A3\"><span class=\"toc-text\"> 那为什么 C# 要有这个访问性限制呢。其实也不难理解</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"c#/访问等级","uid":"b2e8321107bb1bee6888ca2a7202b079","slug":"学习笔记/Csharp/访问等级","date":"2023-06-22T16:39:59.000Z","updated":"2023-06-22T18:04:53.750Z","comments":true,"path":"api/articles/学习笔记/Csharp/访问等级.json","keywords":null,"cover":null,"text":"# 访问等级（Access Level）是指在 C# 中用于控制类、结构体、接口、字段、属性、方法和构造函数等成员的可访问性的修饰符。C# 中有五个访问等级，从高到低分别是： public ：公共的，可以被任何代码访问。 protected internal ：受保护的内部的，可...","link":"","photos":[],"count_time":{"symbolsCount":391,"symbolsTime":"1 mins."},"categories":[{"name":"C#","slug":"C","count":10,"path":"api/categories/C.json"}],"tags":[{"name":"语言学习","slug":"语言学习","count":11,"path":"api/tags/语言学习.json"},{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"},{"name":"C#","slug":"C","count":10,"path":"api/tags/C.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"c#/public变量的赋值","uid":"dcd15c9ea32f43ce189ea4a554532717","slug":"学习笔记/Unity引擎/public变量的赋值","date":"2023-06-22T16:39:59.000Z","updated":"2023-06-22T18:06:17.087Z","comments":true,"path":"api/articles/学习笔记/Unity引擎/public变量的赋值.json","keywords":null,"cover":[],"text":"如果在 Unity 引擎中的对象中挂在的脚本里。 有 public 访问修饰符。会在脚本模块下看到这个变量，并进行赋值。 这个赋值的优先级很高，会覆盖掉脚本代码之中初始化定义的赋值。 public enum emAction &#123; None&#x3D;0, GetUp,&...","link":"","photos":[],"count_time":{"symbolsCount":539,"symbolsTime":"1 mins."},"categories":[{"name":"C#","slug":"C","count":10,"path":"api/categories/C.json"}],"tags":[{"name":"语言学习","slug":"语言学习","count":11,"path":"api/tags/语言学习.json"},{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"},{"name":"C#","slug":"C","count":10,"path":"api/tags/C.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}